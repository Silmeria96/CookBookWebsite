@model CookBookWebsite.Models.Article

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Article</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">上传图片</label>
            <div class="col-md-6" style="max-width:380px;">
                <input id="image-input" type="file" name="img" class="form-control file"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateUserID, "CreateUserID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CreateUserID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CreateUserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section scripts{
    <script>
        // 上传插件初始化
        $("#image-input").fileinput({
            language : 'zh',//设置文中文
            uploadUrl: "/ImageUpload/UploadCookBookImage",//图片上传的url，我这里对应的是后台struts配置好的的action方法
            showCaption : true,//显示标题
            showRemove : true, //显示移除按钮
            uploadAsync : true,//默认异步上传
            showPreview : false,//是否显示预览
            textEncoding : "UTF-8",//文本编码
            autoReplaceBoolean: false,//选择图片时不清空原图片
        });

        // 异步上传成功结果处理
        $("#image-input").on('fileuploaded', function (event, data, previewId, index) {
            if (data.response.flag) {
                $("#Image").val(data.response.path);
            }
            else {
                alert(data.response.msg);
            }
        });

        // 异步上传失败结果处理
        $("#img").on('fileerror', function (event, data, msg) {
            alert("error");
        });
    </script>
}